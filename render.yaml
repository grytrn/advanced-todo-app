services:
  # Backend API Service
  - type: web
    name: todo-app-backend
    runtime: node
    plan: free
    buildCommand: cd backend && npm install && npm run generate && npm run build
    startCommand: cd backend && npm run start:prod
    envVars:
      # Database
      - key: DATABASE_URL
        fromDatabase:
          name: todo-app-db
          property: connectionString
      
      # Redis
      - key: REDIS_URL
        fromService:
          name: todo-app-redis
          type: redis
          property: connectionString
      
      # JWT Secrets
      - key: JWT_ACCESS_SECRET
        generateValue: true
      - key: JWT_REFRESH_SECRET
        generateValue: true
      
      # Application
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 8000
      - key: FRONTEND_URL
        value: https://todo-app-frontend.onrender.com
      
      # Email configuration
      - key: SMTP_HOST
        value: smtp.gmail.com
      - key: SMTP_PORT
        value: 587
      - key: EMAIL_FROM
        value: noreply@yourdomain.com
      
      # Security
      - key: CSRF_SECRET
        generateValue: true
      - key: SESSION_SECRET
        generateValue: true
      
      # AWS Region (if using S3)
      - key: AWS_REGION
        value: us-east-1
      
      # Pull secrets from environment group
      - fromGroup: todo-app-secrets

    healthCheckPath: /api/v1/health
    autoDeploy: true
    
  # Frontend Service
  - type: web
    name: todo-app-frontend
    runtime: static
    buildCommand: cd frontend && npm install && npm run build
    staticPublishPath: ./frontend/dist
    pullRequestPreviewsEnabled: true
    envVars:
      - key: VITE_API_URL
        value: https://todo-app-backend.onrender.com
      - key: VITE_WS_URL
        value: wss://todo-app-backend.onrender.com
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
      - path: /*
        name: X-XSS-Protection
        value: 1; mode=block
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    autoDeploy: true
    
  # Redis Service
  - type: redis
    name: todo-app-redis
    plan: free
    ipAllowList: []

databases:
  - name: todo-app-db
    plan: free
    databaseName: tododb
    user: todouser

envVarGroups:
  - name: todo-app-secrets
    envVars:
      # Email configuration (required for password reset)
      - key: SMTP_USER
        sync: false
      - key: SMTP_PASS
        sync: false
      
      # OAuth configuration (optional)
      - key: GOOGLE_CLIENT_ID
        sync: false
      - key: GOOGLE_CLIENT_SECRET
        sync: false
      - key: GITHUB_CLIENT_ID
        sync: false
      - key: GITHUB_CLIENT_SECRET
        sync: false
      
      # Monitoring (optional)
      - key: SENTRY_DSN
        sync: false
      
      # File storage (optional)
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_S3_BUCKET
        sync: false